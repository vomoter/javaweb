<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.mapper.EmpMapper">
    <!-- 定义可重用的SQL片段-->
    <sql id="commonSelect">
        select id,username,password,name,gender,image,job,entrydate,dept_id,dept_id,create_time,update_time
        from emp
    </sql>

    <!--resultType: 单条记录封装的类型-->
    <select id="list" resultType="com.example.pojo.Emp">
        <!-- <include>：通过属性refid,指定包含的sql片段
             SqL片段的引用
         -->
        <include refid="commonSelect"></include>
        select * from emp
        <where>
            <if test="name != null">
                name like concat('%', #{name}, '%')
            </if>
            <if test="gender != null">
                and gender = #{gender}
            </if>
            <if test="begin != null and end != null">
                and entrydate between #{begin} and #{end}
            </if>
        </where>
        order by update_time desc
    </select>

    <!--    动态更新员工信息-->
    <update id="update2">
        update emp
        <set>
            <if test="username != null">username = #{username},</if>
            <if test="name != null">name = #{name},</if>
            <if test="gender != null">gender = #{gender},</if>
            <if test="image != null">image = #{image},</if>
            <if test="job != null">job = #{job},</if>
            <if test="entrydate != null">entrydate = #{entrydate},</if>
            <if test="deptId != null">dept_id = #{deptId},</if>
            <if test="updateTime != null">update_time = #{updateTime}</if>
        </set>
        where id = #{id}

    </update>

    <!--    批量删除员工 id为(14,15,16)-->
    <delete id="deleteByID">
        /*
        collecton:遍历的集合
        item:遍历的元素
        suparator:分隔符
        open:遍历开始前拼接的SQL片段
        close:遍历结束后拼接的SQL片段
        */
        delete from emp where id in
        <foreach collection="integerList" item="id" separator="," open="(" close=")">

            #{id}
        </foreach>
    </delete>
    


</mapper>